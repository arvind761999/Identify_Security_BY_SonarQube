
 Step 1: Create Project Folder
Folder structure:**

```
my-python-app/
â”œâ”€â”€ app/
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ routes.py      # with insecure code
â”‚   â””â”€â”€ utils.py
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ sonar-project.properties
â”œâ”€â”€ README.md
â”œâ”€â”€ .github/
â”‚   â””â”€â”€ workflows/
â”‚       â”œâ”€â”€ codeql-analysis.yml
â”‚       â””â”€â”€ sonarcloud.yml
```

---

### ðŸ”¹ Step 2: Push to GitHub

1. Create a **new GitHub repo**
2. Push the entire folder structure

---

### ðŸ”¹ Step 3: Set Up **CodeQL Scan**

1. Add `.github/workflows/codeql-analysis.yml`
   (Use the CodeQL workflow config provided earlier)

2. GitHub will automatically scan for security issues

---

### ðŸ”¹ Step 4: Set Up **SonarCloud Scan**

1. Create a free account at [https://sonarcloud.io](https://sonarcloud.io)
2. Connect your **GitHub repo**
3. Add `sonar-project.properties` in root folder:

```sonar.projectKey=arvind761999_Identify_Security_BY_SonarQube
sonar.organization=sonarqube15
```

4. Add `.github/workflows/sonarcloud.yml`
   (Use SonarCloud GitHub Actions workflow from earlier)

5. Generate a **SONAR\_TOKEN** on SonarCloud

6. Add it to GitHub repo:

   * Settings â†’ Secrets â†’ Actions â†’ New Secret â†’ `SONAR_TOKEN`

---

### ðŸ”¹ Step 5: Push Code and Trigger Both Scans

* Push any change to `main` branch
* Both CodeQL and SonarCloud will run automatically

---

### ðŸ”¹ Step 6: View Results

| Tool           | Where to See Results                                             |
| -------------- | ---------------------------------------------------------------- |
| **CodeQL**     | GitHub â†’ Security â†’ Code scanning alerts                         |
| **SonarCloud** | [https://sonarcloud.io/projects](https://sonarcloud.io/projects) |

---

### ðŸŽ‰ Done!


